{"version":3,"sources":["reportWebVitals.js","components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","cats","type","value","onChange","console","log","target","getGif","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"8KAYeA,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,qBCJC,SAASQ,EAAT,GAAyC,IAAlBC,EAAiB,EAAjBA,cAAiB,EACfC,mBAAS,IADM,mBAC5CC,EAD4C,KAChCC,EADgC,KAcnD,OACI,sBAAMC,SAPW,SAACC,GAClBA,EAAEC,iBACFN,GAAe,SAAAO,GAAI,OAAKL,GAAL,mBAAoBK,OACvCJ,EAAc,KAId,SACI,uBACIK,KAAK,OACLC,MAAOP,EACPQ,SAhBc,SAACL,GACvBM,QAAQC,MACRT,EAAcE,EAAEQ,OAAOJ,Y,mCCRlBK,EAAM,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACZC,EADY,iDACqCC,UAAUH,GAD/C,+DAECI,MAAOF,GAFR,cAEZG,EAFY,gBAGKA,EAAKC,OAHV,uBAGVC,EAHU,EAGVA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAEzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVxB,kBAcXM,GAdW,4CAAH,sDCEJ,SAASO,EAAT,GAAyC,EAAlBJ,GAAmB,IAAfC,EAAc,EAAdA,MAAOV,EAAO,EAAPA,IAC7C,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAMN,IACrB,4BAAKA,OCFF,SAASO,EAAT,GAA8B,IAAZnB,EAAW,EAAXA,SAAW,ECDhB,SAAEA,GAAe,IAAD,EACdd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAH2B,mBACjCC,EADiC,KAC1BC,EAD0B,KAgBxC,OAVAC,qBAAW,WACPxB,EAAQC,GACPtB,MAAM,SAAA8C,GACHF,EAAS,CACLf,KAAMiB,EACNJ,SAAS,SAGlB,CAACpB,IAEGqB,EDd0BI,CAAczB,GAAlCa,EAD2B,EAChCN,KAAaa,EADmB,EACnBA,QAErB,OACI,qCACMA,GAAW,mBAAGJ,UAAU,mCAAb,qBAEb,oBAAIA,UAAU,oCAAd,SAAmDhB,IACnD,qBAAKgB,UAAU,YAAf,SAEYH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAACK,EAAD,eAEQL,GADCA,EAAIC,YEZ1B,SAASe,IAAgB,IAAD,EACCxC,mBAAS,CAAC,cADX,mBAC5ByC,EAD4B,KAChB1C,EADgB,KAGnC,OACI,qCACI,8CACA,cAACD,EAAD,CAAaC,cAAgBA,IAC7B,uBACA,6BAEQ0C,EAAWlB,KAAI,SAAAT,GAAQ,OACnB,cAACmB,EAAD,CAEInB,SAAUA,GADLA,W,MCVjC4B,IAASC,OACL,cAACH,EAAD,IACFI,SAASC,eAAe,SAM1BxD,M","file":"static/js/main.42802410.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function AddCategory({ setCategories }) {\n    const [inputValue, setinputValue] = useState('');\n\n    const handleInputChange = (e) => {\n        console.log();\n        setinputValue(e.target.value)\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        setCategories( cats => [inputValue, ...cats]);\n        setinputValue(\"\");\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input \n                type=\"text\"\n                value={inputValue}\n                onChange={ handleInputChange }\n            />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n} ","export const getGif = async (category) => {\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&api_key=9NASuYGlF9IsguoZrSlRmVUp3RK590Xq&limit=10`;\n    const resp = await fetch( url );\n    const { data } = await resp.json();\n    \n    const gifs = data.map(img => {\n\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    });\n    // console.log(gifs);\n    return gifs;\n    // setImages(gifs);\n}","import React from 'react';\n\nexport default function GifGridItem( {id, title, url} ) {\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={url} alt={ title } />\n            <p>{ title }</p>\n        </div>\n    )\n}\n","import React from 'react';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport GifGridItem from './GifGridItem';\n\nexport default function GifGrid({category}) {\n    const { data:images, loading } = useFetchGifs( category );\n\n    return (\n        <>\n            { loading && <p className=\"animate__animated animate__flash\">Loading</p> }\n\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\n            <div className=\"card-grid\">\n                    {\n                        images.map( img => (\n                            <GifGridItem \n                                key={img.id}\n                                {...img} \n                            />\n                        )\n                        )\n                    }\n            </div>\n        </>\n    )\n}\n","import { useState, useEffect } from \"react\";\nimport { getGif } from '../helpers/getGifs';\n\nexport const useFetchGifs = ( category ) => {\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect( () => {\n        getGif( category )\n        .then( imgs => {\n            setState({\n                data: imgs,\n                loading: false\n            }); \n        } )\n    }, [category]);\n\n    return state;\n}","import React, {useState} from 'react';\nimport AddCategory from './components/AddCategory';\nimport GifGrid from './components/GifGrid';\n\nexport default function GifExpertApp() {\n    const [categories, setCategories] = useState(['one punch']);\n\n    return (\n        <>\n            <h2>GifExpertAPP</h2>\n            <AddCategory setCategories={ setCategories } />\n            <hr/>\n            <ol>\n                {\n                    categories.map(category => (\n                        <GifGrid \n                            key={category}\n                            category={category}\n                        />\n                    ))\n                }\n            </ol>\n\n        </>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp/>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}